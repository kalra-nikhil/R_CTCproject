# Waterfall plot for Method01 and Method02
```{r}
#| eval: false
# Define labeller
count_labeller <- as_labeller(function(value) {
  counts <- data |>
    filter(Method %in% c("Method01", "Method02")) |>
    distinct(Patient_ID, Cancer) |>
    group_by(Cancer) |>
    summarize(count = n(), .groups = "drop") |>
    mutate(label = case_when(
      Cancer == "positive" ~ paste0("Cancer positive (n=", count, ")"),
      Cancer == "negative" ~ paste0("Cancer negative (n=", count, ")")
    ))
  label_map <- setNames(counts$label, counts$Cancer)
  sapply(value, function(v) {
    if (v %in% names(label_map)) label_map[[v]] else paste0(v, " (n=0)")
  })
})

# ðŸ§¼ Pivot to wide format and calculate delta per patient-method
plot_data <- data |>
  # filter(Method %in% c("Method01", "Method02")) |>
  select(Patient_ID, Cancer, Method, Timepoint, CTC_count) |>
  pivot_wider(names_from = Timepoint, values_from = CTC_count) |>
  mutate(
    CTC_total = pre_biopsy + post_biopsy,
    CTC_delta = case_when(
      (post_biopsy - pre_biopsy) == 0 & CTC_total != 0 ~ 1,
      CTC_total == 0 ~ 0.05,
      TRUE ~ post_biopsy - pre_biopsy
    ),
    Cancer = factor(Cancer, levels = c("positive", "negative")),
    Method = factor(Method, levels = c("Method01", "Method02"))
  ) |>
  arrange(Cancer, Method, CTC_delta) |>
  group_by(Cancer, Method) |>
  mutate(women = row_number()) |>
  ungroup()

# Function to create plots
create_cancer_plot <- function(method, cancer_type, data) {
  data_subset <- filter(data, Method == method, Cancer == cancer_type)
  if (nrow(data_subset) == 0) return(ggplot() + theme_void() + ggtitle(paste("No data for", method, "-", cancer_type)))
  ggplot(data_subset, aes(x = women, y = CTC_delta, fill = Cancer)) +
    geom_bar(stat = "identity", width = 0.8) +
    labs(y = if (cancer_type == "positive") "CTC change from baseline" else NULL, x = "Recruited women") +
    scale_x_continuous(breaks = seq(0, max(data_subset$women, na.rm = TRUE), by = 10)) +
    scale_y_continuous(limits = c(-3, 6)) +
    scale_fill_manual(values = c("positive" = "#619CFF", "negative" = "#F8766D")) +
    theme_bw() +
    theme(axis.title.x = element_text(size = 12, margin = margin(t = 10)),
          axis.title.y = element_text(size = 12, margin = margin(r = 5)),
          # plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"),
          # plot.margin = margin(t = 10, l = 5),
          # plot.margin = margin(t = 10, l = 10, r = 10, b = 10),
          panel.grid.major.y = element_blank(), 
          text = element_text(size = 14), 
          legend.position = "none") +
    facet_grid(cols = vars(Cancer), labeller = count_labeller)
}

combined_plot_01 <- (
  wrap_elements(
    create_cancer_plot("Method01", "positive", plot_data) + 
    create_cancer_plot("Method01", "negative", plot_data) + 
    plot_layout(widths = c(3.2, 1.8)) + 
    plot_annotation(
      title = "Waterfall plot for CellSearch detected CTCs",
      theme = theme(plot.title = element_text(hjust = 0.5, size = 13, face = "bold", margin = margin(b = 7)))
    )
  ))

combined_plot_01
png("combined_plot_01.png", width = 2400, height = 1150, res = 300)
print(combined_plot_01)
dev.off()

combined_plot_02 <- (
  wrap_elements(
    create_cancer_plot("Method02", "positive", plot_data) + 
    create_cancer_plot("Method02", "negative", plot_data) + 
    plot_layout(widths = c(3.2, 1.8)) + 
    plot_annotation(
      title = "Waterfall plot for Parsortix detected CTCs",
      theme = theme(plot.title = element_text(hjust = 0.5, size = 13, face = "bold", margin = margin(b = 7)))
    )
  ))

# combined_plot_02
png("combined_plot_02.png", width = 2400, height = 1150, res = 300)
print(combined_plot_01)
print(combined_plot_02)
dev.off()

# Combine plots with titles
# combined_plot <- (
#   wrap_elements(
#     create_cancer_plot("Method01", "positive", plot_data) + 
#     create_cancer_plot("Method01", "negative", plot_data) + 
#     plot_layout(widths = c(3.3, 1.7)) + 
#     plot_annotation(
#       title = "Waterfall plot for CellSearch detected CTCs",
#       theme = theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold", margin = margin(t = 0, b = 1)))
#     )
#   ) /
#   wrap_elements(
#     create_cancer_plot("Method02", "positive", plot_data) + 
#     create_cancer_plot("Method02", "negative", plot_data) + 
#     plot_layout(widths = c(3.3, 1.7)) + 
#     plot_annotation(
#       title = "Waterfall plot for Parsortix detected CTCs",
#       theme = theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold", margin = margin(t = 0, b = 1)))
#     )
#   )
# )

# Display final combined plot
# combined_plot

######
# Step 1: Sum CTC counts across both methods per patient per timepoint
summed_data <- data |>
    filter(Method %in% c("Method01", "Method02")) |>
    group_by(Patient_ID, Cancer, Timepoint) |>
    summarize(CTC_count = sum(CTC_count, na.rm = TRUE), .groups = "drop") |>
    pivot_wider(names_from = Timepoint, values_from = CTC_count) |>
    mutate(
        pre_biopsy = replace_na(pre_biopsy, 0),
        post_biopsy = replace_na(post_biopsy, 0),
        CTC_total = pre_biopsy + post_biopsy,
        CTC_delta = case_when(
            (post_biopsy - pre_biopsy) == 0 & CTC_total != 0 ~ 1,
            CTC_total == 0 ~ 0.05,
            TRUE ~ post_biopsy - pre_biopsy
        ),
        Cancer = factor(Cancer, levels = c("positive", "negative"))
    ) |>
    arrange(Cancer, CTC_delta) |>
    group_by(Cancer) |>
    mutate(women = row_number()) |>
    ungroup()

# Step 2: Create correct count_labeller
count_labeller_combined <- as_labeller(function(value) {
    counts <- summed_data |>
        distinct(Patient_ID, Cancer) |>
        group_by(Cancer) |>
        summarize(count = n(), .groups = "drop") |>
        mutate(label = case_when(
            Cancer == "positive" ~ paste0("Cancer positive (n=", count, ")"),
            Cancer == "negative" ~ paste0("Cancer negative (n=", count, ")")
        ))
    label_map <- setNames(counts$label, counts$Cancer)
    sapply(value, function(v) {
        if (v %in% names(label_map)) label_map[[v]] else paste0(v, " (n=0)")
    })
})

# Step 3: Plot the true combined data
correct_combined_plot <- ggplot(summed_data, aes(x = women, y = CTC_delta, fill = Cancer)) +
    geom_bar(stat = "identity", width = 0.8) +
    labs(y = "CTC change from baseline", x = "Recruited women") +
    scale_x_continuous(breaks = seq(0, max(summed_data$women, na.rm = TRUE), by = 10)) +
    #scale_y_continuous(limits = c(-3, 6)) +
    scale_fill_manual(values = c("positive" = "#619CFF", "negative" = "#F8766D")) +
    theme_bw() +
    theme(
        axis.title.x = element_text(size = 12, margin = margin(t = 10)),
        axis.title.y = element_text(size = 12, margin = margin(r = 5)),
        panel.grid.major.y = element_blank(),
        text = element_text(size = 14),
        legend.position = "none"
    ) +
    facet_grid(cols = vars(Cancer), labeller = count_labeller_combined) +
    ggtitle("Waterfall Plot: Combined CTC Change by Cancer Status") +
    theme(plot.title = element_text(hjust = 0.5, size = 13, face = "bold", margin = margin(b = 7)))

# Save plot
print(correct_combined_plot)
######


rm(
  count_labeller, plot_data,
  combined_plot_01, combined_plot_02
)


```
